@using ScanGuard.Domain.Entity
@using Microsoft.AspNetCore.Identity

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<div class="auth-container">
    @if (SignInManager.IsSignedIn(User))
    {
        <div class="user-info">
            <svg class="user-icon" viewBox="0 0 24 24" fill="none" stroke="#00d4ff" stroke-width="2">
                <path d="M20 21v-2a4 4 0 00-4-4H8a4 4 0 00-4 4v2" />
                <circle cx="12" cy="7" r="4" />
            </svg>
            <a id="manage" class="username" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                @UserManager.GetUserName(User)
            </a>
        </div>
        <form id="logoutForm" class="logout-form" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="logout" type="submit" class="btn-custom btn-logout">
                <svg class="logout-icon" viewBox="0 0 24 24" fill="none" stroke="#ffffff" stroke-width="2">
                    <path d="M9 21H5a2 2 0 01-2-2V5a2 2 0 012-2h4M16 17l5-5-5-5M21 12H9" />
                </svg>
                Log out
            </button>
        </form>
    }
    else
    {
        <ul class="auth-links">
            <li class="nav-item">
                <a class="nav-link" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
            </li>
        </ul>
    }
</div>